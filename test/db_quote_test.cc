#include "gtest/gtest.h"
#include "db_quote.h"
#include "global.h"
#include "dad_parse_iterator.h" 

const unsigned char dad_data[]{
	0x8C, 0x19, 0xFC, 0x33, 0x00, 0x37, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0xFF, 0xFF, 0xFF, 0xFF, 0x53, 0x48, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x00, 0xA2, 0x17, 0xFE,
		0x9A, 0xC8, 0xC3, 0xA5, 0xC9, 0xCF, 0xD6, 0xA4, 0xD6, 0xB8, 0xCA, 0xFD, 0x00, 0xB8, 0xFE, 0x76,
		0x80, 0x33, 0x9E, 0x53, 0x33, 0x6B, 0x01, 0x45, 0x1F, 0x75, 0x02, 0x45, 0x0A, 0x57, 0x01, 0x45,
		0xAE, 0x5F, 0x02, 0x45, 0x97, 0xFD, 0xB6, 0x4C, 0x99, 0xEC, 0x94, 0x51, 0x49, 0x02, 0x07, 0x01,
		0x00, 0x85, 0x9F, 0x53, 0xAE, 0x07, 0x02, 0x45, 0xAE, 0x07, 0x02, 0x45, 0xB8, 0x0A, 0x01, 0x45,
		0x33, 0x2B, 0x01, 0x45, 0x54, 0x77, 0xA7, 0x4C, 0xD9, 0x1A, 0x84, 0x51, 0xB2, 0x00, 0xD8, 0x02,
		0x80, 0xD6, 0xA0, 0x53, 0x14, 0x06, 0x01, 0x45, 0x8F, 0x2E, 0x01, 0x45, 0x00, 0x3C, 0x00, 0x45,
		0x52, 0x78, 0x00, 0x45, 0x45, 0x68, 0xA6, 0x4C, 0x1D, 0x44, 0x83, 0x51, 0xF3, 0x00, 0x7C, 0x02,
		0xFF, 0xFF, 0xFF, 0xFF, 0x53, 0x48, 0x36, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x3C, 0x00, 0x45,
		0x9A, 0xC8, 0xC3, 0xA5, 0xC6, 0xD6, 0xB7, 0xA2, 0xD2, 0xF8, 0xD0, 0xD0, 0x00, 0x00, 0x7C, 0x02,
		0x80, 0x33, 0x9E, 0x53, 0x14, 0xAE, 0x1B, 0x41, 0x85, 0xEB, 0x1D, 0x41, 0x3D, 0x0A, 0x1B, 0x41,
		0xC3, 0xF5, 0x1C, 0x41, 0x30, 0xA0, 0x90, 0x49, 0xFA, 0x3F, 0x8A, 0x4E, 0xC5, 0x00, 0x00, 0x00,
		0x00, 0x85, 0x9F, 0x53, 0xAE, 0x47, 0x1D, 0x41, 0xAE, 0x47, 0x1D, 0x41, 0x29, 0x5C, 0x1B, 0x41,
		0x14, 0xAE, 0x1B, 0x41, 0x30, 0xF1, 0x5E, 0x49, 0xA0, 0xD4, 0x54, 0x4E, 0xC5, 0x00, 0x00, 0x00,
		0x80, 0xD6, 0xA0, 0x53, 0x14, 0xAE, 0x1B, 0x41, 0xEC, 0x51, 0x1C, 0x41, 0x29, 0x5C, 0x1B, 0x41,
		0x14, 0xAE, 0x1B, 0x41, 0x80, 0x41, 0x22, 0x49, 0x7C, 0x5E, 0x1A, 0x4E, 0xC5, 0x00, 0x00, 0x00,
		0xFF, 0xFF, 0xFF, 0xFF, 0x53, 0x5A, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x00, 0x5C, 0x1B, 0x41,
		0x9A, 0xC8, 0xC3, 0xA5, 0xCD, 0xF2, 0x20, 0x20, 0xBF, 0xC6, 0xA3, 0xC1, 0x00, 0x00, 0x00, 0x00,
		0x80, 0x33, 0x9E, 0x53, 0x5C, 0x8F, 0x06, 0x41, 0x52, 0xB8, 0x06, 0x41, 0x48, 0xE1, 0x02, 0x41,
		0xF6, 0x28, 0x04, 0x41, 0x90, 0xD1, 0x52, 0x49, 0xBB, 0x1E, 0x2A, 0x4E, 0xC5, 0x00, 0xA3, 0x5D,
		0x00, 0x85, 0x9F, 0x53, 0x00, 0x00, 0x04, 0x41, 0x00, 0x00, 0x04, 0x41, 0xD7, 0xA3, 0x00, 0x41,
		0x85, 0xEB, 0x01, 0x41, 0x20, 0x7A, 0x27, 0x49, 0xFC, 0x4D, 0x04, 0x4E, 0xC5, 0x00, 0x59, 0x50,
		0x80, 0xD6, 0xA0, 0x53, 0x85, 0xEB, 0x01, 0x41, 0x52, 0xB8, 0x02, 0x41, 0xB8, 0x1E, 0x01, 0x41,
		0x9A, 0x99, 0x01, 0x41, 0xA0, 0x1F, 0xA9, 0x48, 0xBB, 0x3A, 0x86, 0x4D, 0xC5, 0x00, 0xAF, 0x30,
		0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
class dbQuoteTest : public ::testing::Test
{
protected:
	virtual void SetUp()
	{
		_unlink("test.db");
	}

	virtual void TearDown()
	{
	}
};

//db类的静态函数set_default
TEST_F(dbQuoteTest, import)
{
	db::set_default("test.db",global::create_default_database);
	dad_parse_iterator p((char *)dad_data, (char *)(dad_data + 432), {
		(id_of_dad *)(dad_data + 20),
		(quote_of_dad *)(dad_data + 16 + 32)
	}),end;
	DbQuote quote_;
	int rc=quote_.bulk_insert(p,end);
	EXPECT_EQ(9,rc); //首次为0
}
